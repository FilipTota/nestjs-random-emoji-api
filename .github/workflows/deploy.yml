name: Deploy

on:
  workflow_run:
    workflows: ['Tests']
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install

      - name: Build project
        run: pnpm run build

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Verify Railway CLI
        run: railway --version

      - name: Setup Railway authentication
        run: |
          echo "Setting up Railway authentication..."
          mkdir -p ~/.railway
          # Railway CLI expects a specific config format
          echo '{"token":"${{ secrets.RAILWAY_TOKEN }}","projects":{}}' > ~/.railway/config.json
          echo "Config file created with content:"
          cat ~/.railway/config.json
          echo "Config file permissions:"
          ls -la ~/.railway/
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      - name: Test Railway authentication
        run: |
          echo "Testing Railway authentication..."
          echo "Method 1: Using config file"
          railway whoami
        continue-on-error: true

      - name: Test with environment variable
        run: |
          echo "Method 2: Using environment variable"
          RAILWAY_TOKEN="${{ secrets.RAILWAY_TOKEN }}" railway whoami
        continue-on-error: true

      - name: Check if token is working
        run: |
          echo "Checking if Railway token is valid..."
          echo "Token length: ${#RAILWAY_TOKEN}"
          echo "Token starts with: ${RAILWAY_TOKEN:0:10}..."
          echo "Token ends with: ...${RAILWAY_TOKEN: -10}"
          echo "Testing token directly..."
          curl -H "Authorization: Bearer ${{ secrets.RAILWAY_TOKEN }}" \
               "https://backboard.railway.app/graphql/v2" \
               -X POST \
               -H "Content-Type: application/json" \
               -d '{"query":"query { me { id email } }"}' \
               --silent --show-error
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        continue-on-error: true

      - name: Verify token in environment
        run: |
          echo "Verifying token is set in environment..."
          if [ -n "$RAILWAY_TOKEN" ]; then
            echo "✅ RAILWAY_TOKEN is set (length: ${#RAILWAY_TOKEN})"
          else
            echo "❌ RAILWAY_TOKEN is NOT set"
          fi
          echo "Testing with railway whoami..."
          railway whoami
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        continue-on-error: true

      - name: Try direct token usage
        run: |
          echo "Trying to use token directly in Railway commands..."
          echo "Attempting to list projects with token..."
          RAILWAY_TOKEN="${{ secrets.RAILWAY_TOKEN }}" railway list
        continue-on-error: true

      - name: List Railway projects
        run: |
          echo "Listing available Railway projects..."
          railway list

      - name: Try to link existing project
        run: |
          echo "Attempting to link existing Railway project..."
          railway link
        continue-on-error: true

      - name: Check project status
        run: |
          echo "Checking Railway project status..."
          railway status
        continue-on-error: true

      - name: Deploy to Railway
        run: |
          echo "Deploying to Railway..."
          railway up --detach
        continue-on-error: true

      - name: Check deployment status
        run: |
          echo "Checking final deployment status..."
          railway status
        continue-on-error: true

      - name: Summary
        run: |
          echo "=== DEPLOYMENT SUMMARY ==="
          echo "Deployment process completed."
          echo "Check the logs above for any specific errors."
